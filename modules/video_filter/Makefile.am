# modules/video_filter/Makefile.am automatically generated from modules/video_filter/Modules.am by modules/genmf
# DO NOT EDIT THIS FILE DIRECTLY! See Modules.am instead.

basedir = video_filter
dir = video_filter
mods = adjust alphamask anaglyph antiflicker atmo audiobargraph_v ball blend blendbench bluescreen canvas chain clone colorthres croppadd erase extract gaussianblur gradfun gradient grain hqdn3d invert logo magnify marq mirror mosaic motionblur motiondetect opencv_example opencv_wrapper panoramix posterize postproc psychedelic ripple rotate rss scale scene sepia sharpen subsdelay swscale transform wall wave yuvp
libvlc_LTLIBRARIES =  $(LTLIBatmo) $(LTLIBopencv_example) $(LTLIBopencv_wrapper) $(LTLIBpanoramix) $(LTLIBpostproc) $(LTLIBswscale)
EXTRA_LTLIBRARIES =  libatmo_plugin.la libopencv_example_plugin.la libopencv_wrapper_plugin.la libpanoramix_plugin.la libpostproc_plugin.la libswscale_plugin.la

include $(top_srcdir)/modules/common.am

# The adjust plugin
libadjust_plugin_la_SOURCES = $(SOURCES_adjust)
nodist_libadjust_plugin_la_SOURCES = $(nodist_SOURCES_adjust)
# Force per-target objects:
libadjust_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_adjust)
libadjust_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_adjust)
libadjust_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_adjust)
libadjust_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_adjust)
# Set LIBADD manually:
libadjust_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_adjust)
libadjust_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_adjust)

# The alphamask plugin
libalphamask_plugin_la_SOURCES = $(SOURCES_alphamask)
nodist_libalphamask_plugin_la_SOURCES = $(nodist_SOURCES_alphamask)
# Force per-target objects:
libalphamask_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_alphamask)
libalphamask_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_alphamask)
libalphamask_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_alphamask)
libalphamask_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_alphamask)
# Set LIBADD manually:
libalphamask_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_alphamask)
libalphamask_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_alphamask)

# The anaglyph plugin
libanaglyph_plugin_la_SOURCES = $(SOURCES_anaglyph)
nodist_libanaglyph_plugin_la_SOURCES = $(nodist_SOURCES_anaglyph)
# Force per-target objects:
libanaglyph_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_anaglyph)
libanaglyph_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_anaglyph)
libanaglyph_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_anaglyph)
libanaglyph_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_anaglyph)
# Set LIBADD manually:
libanaglyph_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_anaglyph)
libanaglyph_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_anaglyph)

# The antiflicker plugin
libantiflicker_plugin_la_SOURCES = $(SOURCES_antiflicker)
nodist_libantiflicker_plugin_la_SOURCES = $(nodist_SOURCES_antiflicker)
# Force per-target objects:
libantiflicker_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_antiflicker)
libantiflicker_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_antiflicker)
libantiflicker_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_antiflicker)
libantiflicker_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_antiflicker)
# Set LIBADD manually:
libantiflicker_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_antiflicker)
libantiflicker_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_antiflicker)

# The atmo plugin
libatmo_plugin_la_SOURCES = $(SOURCES_atmo)
nodist_libatmo_plugin_la_SOURCES = $(nodist_SOURCES_atmo)
# Force per-target objects:
libatmo_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_atmo)
libatmo_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_atmo)
libatmo_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_atmo)
libatmo_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_atmo)
# Set LIBADD manually:
libatmo_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_atmo)
libatmo_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_atmo)

# The audiobargraph_v plugin
libaudiobargraph_v_plugin_la_SOURCES = $(SOURCES_audiobargraph_v)
nodist_libaudiobargraph_v_plugin_la_SOURCES = $(nodist_SOURCES_audiobargraph_v)
# Force per-target objects:
libaudiobargraph_v_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_audiobargraph_v)
libaudiobargraph_v_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_audiobargraph_v)
libaudiobargraph_v_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_audiobargraph_v)
libaudiobargraph_v_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_audiobargraph_v)
# Set LIBADD manually:
libaudiobargraph_v_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_audiobargraph_v)
libaudiobargraph_v_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_audiobargraph_v)

# The ball plugin
libball_plugin_la_SOURCES = $(SOURCES_ball)
nodist_libball_plugin_la_SOURCES = $(nodist_SOURCES_ball)
# Force per-target objects:
libball_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_ball)
libball_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_ball)
libball_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_ball)
libball_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_ball)
# Set LIBADD manually:
libball_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_ball)
libball_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_ball)

# The blend plugin
libblend_plugin_la_SOURCES = $(SOURCES_blend)
nodist_libblend_plugin_la_SOURCES = $(nodist_SOURCES_blend)
# Force per-target objects:
libblend_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_blend)
libblend_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_blend)
libblend_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_blend)
libblend_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_blend)
# Set LIBADD manually:
libblend_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_blend)
libblend_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_blend)

# The blendbench plugin
libblendbench_plugin_la_SOURCES = $(SOURCES_blendbench)
nodist_libblendbench_plugin_la_SOURCES = $(nodist_SOURCES_blendbench)
# Force per-target objects:
libblendbench_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_blendbench)
libblendbench_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_blendbench)
libblendbench_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_blendbench)
libblendbench_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_blendbench)
# Set LIBADD manually:
libblendbench_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_blendbench)
libblendbench_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_blendbench)

# The bluescreen plugin
libbluescreen_plugin_la_SOURCES = $(SOURCES_bluescreen)
nodist_libbluescreen_plugin_la_SOURCES = $(nodist_SOURCES_bluescreen)
# Force per-target objects:
libbluescreen_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_bluescreen)
libbluescreen_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_bluescreen)
libbluescreen_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_bluescreen)
libbluescreen_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_bluescreen)
# Set LIBADD manually:
libbluescreen_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_bluescreen)
libbluescreen_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_bluescreen)

# The canvas plugin
libcanvas_plugin_la_SOURCES = $(SOURCES_canvas)
nodist_libcanvas_plugin_la_SOURCES = $(nodist_SOURCES_canvas)
# Force per-target objects:
libcanvas_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_canvas)
libcanvas_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_canvas)
libcanvas_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_canvas)
libcanvas_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_canvas)
# Set LIBADD manually:
libcanvas_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_canvas)
libcanvas_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_canvas)

# The chain plugin
libchain_plugin_la_SOURCES = $(SOURCES_chain)
nodist_libchain_plugin_la_SOURCES = $(nodist_SOURCES_chain)
# Force per-target objects:
libchain_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_chain)
libchain_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_chain)
libchain_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_chain)
libchain_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_chain)
# Set LIBADD manually:
libchain_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_chain)
libchain_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_chain)

# The clone plugin
libclone_plugin_la_SOURCES = $(SOURCES_clone)
nodist_libclone_plugin_la_SOURCES = $(nodist_SOURCES_clone)
# Force per-target objects:
libclone_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_clone)
libclone_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_clone)
libclone_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_clone)
libclone_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_clone)
# Set LIBADD manually:
libclone_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_clone)
libclone_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_clone)

# The colorthres plugin
libcolorthres_plugin_la_SOURCES = $(SOURCES_colorthres)
nodist_libcolorthres_plugin_la_SOURCES = $(nodist_SOURCES_colorthres)
# Force per-target objects:
libcolorthres_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_colorthres)
libcolorthres_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_colorthres)
libcolorthres_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_colorthres)
libcolorthres_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_colorthres)
# Set LIBADD manually:
libcolorthres_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_colorthres)
libcolorthres_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_colorthres)

# The croppadd plugin
libcroppadd_plugin_la_SOURCES = $(SOURCES_croppadd)
nodist_libcroppadd_plugin_la_SOURCES = $(nodist_SOURCES_croppadd)
# Force per-target objects:
libcroppadd_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_croppadd)
libcroppadd_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_croppadd)
libcroppadd_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_croppadd)
libcroppadd_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_croppadd)
# Set LIBADD manually:
libcroppadd_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_croppadd)
libcroppadd_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_croppadd)

# The erase plugin
liberase_plugin_la_SOURCES = $(SOURCES_erase)
nodist_liberase_plugin_la_SOURCES = $(nodist_SOURCES_erase)
# Force per-target objects:
liberase_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_erase)
liberase_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_erase)
liberase_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_erase)
liberase_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_erase)
# Set LIBADD manually:
liberase_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_erase)
liberase_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_erase)

# The extract plugin
libextract_plugin_la_SOURCES = $(SOURCES_extract)
nodist_libextract_plugin_la_SOURCES = $(nodist_SOURCES_extract)
# Force per-target objects:
libextract_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_extract)
libextract_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_extract)
libextract_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_extract)
libextract_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_extract)
# Set LIBADD manually:
libextract_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_extract)
libextract_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_extract)

# The gaussianblur plugin
libgaussianblur_plugin_la_SOURCES = $(SOURCES_gaussianblur)
nodist_libgaussianblur_plugin_la_SOURCES = $(nodist_SOURCES_gaussianblur)
# Force per-target objects:
libgaussianblur_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_gaussianblur)
libgaussianblur_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_gaussianblur)
libgaussianblur_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_gaussianblur)
libgaussianblur_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_gaussianblur)
# Set LIBADD manually:
libgaussianblur_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_gaussianblur)
libgaussianblur_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_gaussianblur)

# The gradfun plugin
libgradfun_plugin_la_SOURCES = $(SOURCES_gradfun)
nodist_libgradfun_plugin_la_SOURCES = $(nodist_SOURCES_gradfun)
# Force per-target objects:
libgradfun_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_gradfun)
libgradfun_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_gradfun)
libgradfun_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_gradfun)
libgradfun_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_gradfun)
# Set LIBADD manually:
libgradfun_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_gradfun)
libgradfun_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_gradfun)

# The gradient plugin
libgradient_plugin_la_SOURCES = $(SOURCES_gradient)
nodist_libgradient_plugin_la_SOURCES = $(nodist_SOURCES_gradient)
# Force per-target objects:
libgradient_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_gradient)
libgradient_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_gradient)
libgradient_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_gradient)
libgradient_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_gradient)
# Set LIBADD manually:
libgradient_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_gradient)
libgradient_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_gradient)

# The grain plugin
libgrain_plugin_la_SOURCES = $(SOURCES_grain)
nodist_libgrain_plugin_la_SOURCES = $(nodist_SOURCES_grain)
# Force per-target objects:
libgrain_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_grain)
libgrain_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_grain)
libgrain_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_grain)
libgrain_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_grain)
# Set LIBADD manually:
libgrain_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_grain)
libgrain_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_grain)

# The hqdn3d plugin
libhqdn3d_plugin_la_SOURCES = $(SOURCES_hqdn3d)
nodist_libhqdn3d_plugin_la_SOURCES = $(nodist_SOURCES_hqdn3d)
# Force per-target objects:
libhqdn3d_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_hqdn3d)
libhqdn3d_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_hqdn3d)
libhqdn3d_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_hqdn3d)
libhqdn3d_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_hqdn3d)
# Set LIBADD manually:
libhqdn3d_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_hqdn3d)
libhqdn3d_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_hqdn3d)

# The invert plugin
libinvert_plugin_la_SOURCES = $(SOURCES_invert)
nodist_libinvert_plugin_la_SOURCES = $(nodist_SOURCES_invert)
# Force per-target objects:
libinvert_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_invert)
libinvert_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_invert)
libinvert_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_invert)
libinvert_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_invert)
# Set LIBADD manually:
libinvert_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_invert)
libinvert_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_invert)

# The logo plugin
liblogo_plugin_la_SOURCES = $(SOURCES_logo)
nodist_liblogo_plugin_la_SOURCES = $(nodist_SOURCES_logo)
# Force per-target objects:
liblogo_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_logo)
liblogo_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_logo)
liblogo_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_logo)
liblogo_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_logo)
# Set LIBADD manually:
liblogo_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_logo)
liblogo_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_logo)

# The magnify plugin
libmagnify_plugin_la_SOURCES = $(SOURCES_magnify)
nodist_libmagnify_plugin_la_SOURCES = $(nodist_SOURCES_magnify)
# Force per-target objects:
libmagnify_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_magnify)
libmagnify_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_magnify)
libmagnify_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_magnify)
libmagnify_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_magnify)
# Set LIBADD manually:
libmagnify_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_magnify)
libmagnify_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_magnify)

# The marq plugin
libmarq_plugin_la_SOURCES = $(SOURCES_marq)
nodist_libmarq_plugin_la_SOURCES = $(nodist_SOURCES_marq)
# Force per-target objects:
libmarq_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_marq)
libmarq_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_marq)
libmarq_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_marq)
libmarq_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_marq)
# Set LIBADD manually:
libmarq_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_marq)
libmarq_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_marq)

# The mirror plugin
libmirror_plugin_la_SOURCES = $(SOURCES_mirror)
nodist_libmirror_plugin_la_SOURCES = $(nodist_SOURCES_mirror)
# Force per-target objects:
libmirror_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_mirror)
libmirror_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_mirror)
libmirror_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_mirror)
libmirror_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_mirror)
# Set LIBADD manually:
libmirror_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_mirror)
libmirror_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_mirror)

# The mosaic plugin
libmosaic_plugin_la_SOURCES = $(SOURCES_mosaic)
nodist_libmosaic_plugin_la_SOURCES = $(nodist_SOURCES_mosaic)
# Force per-target objects:
libmosaic_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_mosaic)
libmosaic_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_mosaic)
libmosaic_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_mosaic)
libmosaic_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_mosaic)
# Set LIBADD manually:
libmosaic_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_mosaic)
libmosaic_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_mosaic)

# The motionblur plugin
libmotionblur_plugin_la_SOURCES = $(SOURCES_motionblur)
nodist_libmotionblur_plugin_la_SOURCES = $(nodist_SOURCES_motionblur)
# Force per-target objects:
libmotionblur_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_motionblur)
libmotionblur_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_motionblur)
libmotionblur_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_motionblur)
libmotionblur_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_motionblur)
# Set LIBADD manually:
libmotionblur_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_motionblur)
libmotionblur_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_motionblur)

# The motiondetect plugin
libmotiondetect_plugin_la_SOURCES = $(SOURCES_motiondetect)
nodist_libmotiondetect_plugin_la_SOURCES = $(nodist_SOURCES_motiondetect)
# Force per-target objects:
libmotiondetect_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_motiondetect)
libmotiondetect_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_motiondetect)
libmotiondetect_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_motiondetect)
libmotiondetect_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_motiondetect)
# Set LIBADD manually:
libmotiondetect_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_motiondetect)
libmotiondetect_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_motiondetect)

# The opencv_example plugin
libopencv_example_plugin_la_SOURCES = $(SOURCES_opencv_example)
nodist_libopencv_example_plugin_la_SOURCES = $(nodist_SOURCES_opencv_example)
# Force per-target objects:
libopencv_example_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_opencv_example)
libopencv_example_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_opencv_example)
libopencv_example_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_opencv_example)
libopencv_example_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_opencv_example)
# Set LIBADD manually:
libopencv_example_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_opencv_example)
libopencv_example_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_opencv_example)

# The opencv_wrapper plugin
libopencv_wrapper_plugin_la_SOURCES = $(SOURCES_opencv_wrapper)
nodist_libopencv_wrapper_plugin_la_SOURCES = $(nodist_SOURCES_opencv_wrapper)
# Force per-target objects:
libopencv_wrapper_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_opencv_wrapper)
libopencv_wrapper_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_opencv_wrapper)
libopencv_wrapper_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_opencv_wrapper)
libopencv_wrapper_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_opencv_wrapper)
# Set LIBADD manually:
libopencv_wrapper_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_opencv_wrapper)
libopencv_wrapper_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_opencv_wrapper)

# The panoramix plugin
libpanoramix_plugin_la_SOURCES = $(SOURCES_panoramix)
nodist_libpanoramix_plugin_la_SOURCES = $(nodist_SOURCES_panoramix)
# Force per-target objects:
libpanoramix_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_panoramix)
libpanoramix_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_panoramix)
libpanoramix_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_panoramix)
libpanoramix_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_panoramix)
# Set LIBADD manually:
libpanoramix_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_panoramix)
libpanoramix_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_panoramix)

# The posterize plugin
libposterize_plugin_la_SOURCES = $(SOURCES_posterize)
nodist_libposterize_plugin_la_SOURCES = $(nodist_SOURCES_posterize)
# Force per-target objects:
libposterize_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_posterize)
libposterize_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_posterize)
libposterize_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_posterize)
libposterize_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_posterize)
# Set LIBADD manually:
libposterize_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_posterize)
libposterize_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_posterize)

# The postproc plugin
libpostproc_plugin_la_SOURCES = $(SOURCES_postproc)
nodist_libpostproc_plugin_la_SOURCES = $(nodist_SOURCES_postproc)
# Force per-target objects:
libpostproc_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_postproc)
libpostproc_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_postproc)
libpostproc_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_postproc)
libpostproc_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_postproc)
# Set LIBADD manually:
libpostproc_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_postproc)
libpostproc_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_postproc)

# The psychedelic plugin
libpsychedelic_plugin_la_SOURCES = $(SOURCES_psychedelic)
nodist_libpsychedelic_plugin_la_SOURCES = $(nodist_SOURCES_psychedelic)
# Force per-target objects:
libpsychedelic_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_psychedelic)
libpsychedelic_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_psychedelic)
libpsychedelic_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_psychedelic)
libpsychedelic_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_psychedelic)
# Set LIBADD manually:
libpsychedelic_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_psychedelic)
libpsychedelic_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_psychedelic)

# The ripple plugin
libripple_plugin_la_SOURCES = $(SOURCES_ripple)
nodist_libripple_plugin_la_SOURCES = $(nodist_SOURCES_ripple)
# Force per-target objects:
libripple_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_ripple)
libripple_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_ripple)
libripple_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_ripple)
libripple_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_ripple)
# Set LIBADD manually:
libripple_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_ripple)
libripple_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_ripple)

# The rotate plugin
librotate_plugin_la_SOURCES = $(SOURCES_rotate)
nodist_librotate_plugin_la_SOURCES = $(nodist_SOURCES_rotate)
# Force per-target objects:
librotate_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_rotate)
librotate_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_rotate)
librotate_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_rotate)
librotate_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_rotate)
# Set LIBADD manually:
librotate_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_rotate)
librotate_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_rotate)

# The rss plugin
librss_plugin_la_SOURCES = $(SOURCES_rss)
nodist_librss_plugin_la_SOURCES = $(nodist_SOURCES_rss)
# Force per-target objects:
librss_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_rss)
librss_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_rss)
librss_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_rss)
librss_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_rss)
# Set LIBADD manually:
librss_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_rss)
librss_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_rss)

# The scale plugin
libscale_plugin_la_SOURCES = $(SOURCES_scale)
nodist_libscale_plugin_la_SOURCES = $(nodist_SOURCES_scale)
# Force per-target objects:
libscale_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_scale)
libscale_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_scale)
libscale_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_scale)
libscale_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_scale)
# Set LIBADD manually:
libscale_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_scale)
libscale_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_scale)

# The scene plugin
libscene_plugin_la_SOURCES = $(SOURCES_scene)
nodist_libscene_plugin_la_SOURCES = $(nodist_SOURCES_scene)
# Force per-target objects:
libscene_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_scene)
libscene_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_scene)
libscene_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_scene)
libscene_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_scene)
# Set LIBADD manually:
libscene_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_scene)
libscene_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_scene)

# The sepia plugin
libsepia_plugin_la_SOURCES = $(SOURCES_sepia)
nodist_libsepia_plugin_la_SOURCES = $(nodist_SOURCES_sepia)
# Force per-target objects:
libsepia_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_sepia)
libsepia_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_sepia)
libsepia_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_sepia)
libsepia_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_sepia)
# Set LIBADD manually:
libsepia_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_sepia)
libsepia_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_sepia)

# The sharpen plugin
libsharpen_plugin_la_SOURCES = $(SOURCES_sharpen)
nodist_libsharpen_plugin_la_SOURCES = $(nodist_SOURCES_sharpen)
# Force per-target objects:
libsharpen_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_sharpen)
libsharpen_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_sharpen)
libsharpen_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_sharpen)
libsharpen_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_sharpen)
# Set LIBADD manually:
libsharpen_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_sharpen)
libsharpen_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_sharpen)

# The subsdelay plugin
libsubsdelay_plugin_la_SOURCES = $(SOURCES_subsdelay)
nodist_libsubsdelay_plugin_la_SOURCES = $(nodist_SOURCES_subsdelay)
# Force per-target objects:
libsubsdelay_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_subsdelay)
libsubsdelay_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_subsdelay)
libsubsdelay_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_subsdelay)
libsubsdelay_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_subsdelay)
# Set LIBADD manually:
libsubsdelay_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_subsdelay)
libsubsdelay_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_subsdelay)

# The swscale plugin
libswscale_plugin_la_SOURCES = $(SOURCES_swscale)
nodist_libswscale_plugin_la_SOURCES = $(nodist_SOURCES_swscale)
# Force per-target objects:
libswscale_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_swscale)
libswscale_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_swscale)
libswscale_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_swscale)
libswscale_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_swscale)
# Set LIBADD manually:
libswscale_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_swscale)
libswscale_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_swscale)

# The transform plugin
libtransform_plugin_la_SOURCES = $(SOURCES_transform)
nodist_libtransform_plugin_la_SOURCES = $(nodist_SOURCES_transform)
# Force per-target objects:
libtransform_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_transform)
libtransform_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_transform)
libtransform_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_transform)
libtransform_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_transform)
# Set LIBADD manually:
libtransform_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_transform)
libtransform_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_transform)

# The wall plugin
libwall_plugin_la_SOURCES = $(SOURCES_wall)
nodist_libwall_plugin_la_SOURCES = $(nodist_SOURCES_wall)
# Force per-target objects:
libwall_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_wall)
libwall_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_wall)
libwall_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_wall)
libwall_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_wall)
# Set LIBADD manually:
libwall_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_wall)
libwall_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_wall)

# The wave plugin
libwave_plugin_la_SOURCES = $(SOURCES_wave)
nodist_libwave_plugin_la_SOURCES = $(nodist_SOURCES_wave)
# Force per-target objects:
libwave_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_wave)
libwave_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_wave)
libwave_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_wave)
libwave_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_wave)
# Set LIBADD manually:
libwave_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_wave)
libwave_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_wave)

# The yuvp plugin
libyuvp_plugin_la_SOURCES = $(SOURCES_yuvp)
nodist_libyuvp_plugin_la_SOURCES = $(nodist_SOURCES_yuvp)
# Force per-target objects:
libyuvp_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_yuvp)
libyuvp_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_yuvp)
libyuvp_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_yuvp)
libyuvp_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_yuvp)
# Set LIBADD manually:
libyuvp_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_yuvp)
libyuvp_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_yuvp)

